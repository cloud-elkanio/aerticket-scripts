# Generated by Django 5.0.6 on 2024-06-20 06:07

import django.contrib.auth.models
import django.contrib.auth.validators
import django.contrib.postgres.fields
import django.db.models.deletion
import django.utils.timezone
import uuid
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ("auth", "0012_alter_user_first_name_max_length"),
    ]

    operations = [
        migrations.CreateModel(
            name="NotificationTemplate",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                        unique=True,
                    ),
                ),
                ("is_deleted", models.BooleanField(default=False, null=True)),
                ("deleted_at", models.DateTimeField(blank=True, null=True)),
                ("created_at", models.BigIntegerField(editable=False, null=True)),
                ("modified_at", models.BigIntegerField(editable=False, null=True)),
                (
                    "notification_type",
                    models.CharField(
                        choices=[("registration", "registration")], max_length=45
                    ),
                ),
                ("heading", models.CharField(max_length=150)),
                ("content", models.TextField()),
                (
                    "channel",
                    models.CharField(choices=[("email", "email")], max_length=150),
                ),
                ("is_active", models.BooleanField(default=True)),
            ],
            options={"db_table": "notification_templates", "managed": False,},
        ),
        migrations.CreateModel(
            name="Country",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                        unique=True,
                    ),
                ),
                ("is_deleted", models.BooleanField(default=False, null=True)),
                ("deleted_at", models.DateTimeField(blank=True, null=True)),
                ("created_at", models.BigIntegerField(editable=False, null=True)),
                ("modified_at", models.BigIntegerField(editable=False, null=True)),
                (
                    "country_name",
                    models.CharField(blank=True, max_length=255, null=True),
                ),
                (
                    "country_code",
                    models.CharField(blank=True, max_length=200, null=True),
                ),
                ("currency_name", models.CharField(max_length=200)),
                ("currency_code", models.CharField(max_length=200)),
                (
                    "inr_conversion_rate",
                    models.DecimalField(decimal_places=4, default=0.0, max_digits=100),
                ),
                ("calling_code", models.CharField(max_length=200, null=True)),
                ("is_active", models.BooleanField(default=False)),
            ],
            options={"db_table": "country",},
        ),
        migrations.CreateModel(
            name="LookUpIntegerationNotification",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                        unique=True,
                    ),
                ),
                ("is_deleted", models.BooleanField(default=False, null=True)),
                ("deleted_at", models.DateTimeField(blank=True, null=True)),
                ("created_at", models.BigIntegerField(editable=False, null=True)),
                ("modified_at", models.BigIntegerField(editable=False, null=True)),
                ("name", models.CharField(max_length=2000)),
                (
                    "integeration_type",
                    models.CharField(
                        choices=[
                            ("email", "email"),
                            ("sms", "sms"),
                            ("whatsapp", "whatsapp"),
                        ],
                        max_length=200,
                    ),
                ),
                (
                    "keys",
                    django.contrib.postgres.fields.ArrayField(
                        base_field=models.CharField(max_length=600),
                        blank=True,
                        default=list,
                        size=None,
                    ),
                ),
                ("icon_url", models.CharField(max_length=600)),
            ],
            options={"abstract": False,},
        ),
        migrations.CreateModel(
            name="LookupOrganizationTypes",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                        unique=True,
                    ),
                ),
                ("is_deleted", models.BooleanField(default=False, null=True)),
                ("deleted_at", models.DateTimeField(blank=True, null=True)),
                ("created_at", models.BigIntegerField(editable=False, null=True)),
                ("modified_at", models.BigIntegerField(editable=False, null=True)),
                (
                    "name",
                    models.CharField(
                        choices=[
                            ("master", "master"),
                            ("agency", "agency"),
                            ("distibutor", "distributor"),
                            ("enterprises", "enterprises"),
                            ("out_api", "out_api"),
                        ],
                        max_length=500,
                    ),
                ),
            ],
            options={"db_table": "lookup_organization_types",},
        ),
        migrations.CreateModel(
            name="LookupPermission",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                        unique=True,
                    ),
                ),
                ("is_deleted", models.BooleanField(default=False, null=True)),
                ("deleted_at", models.DateTimeField(blank=True, null=True)),
                ("created_at", models.BigIntegerField(editable=False, null=True)),
                ("modified_at", models.BigIntegerField(editable=False, null=True)),
                ("name", models.CharField(max_length=200)),
                ("settings_teams_view", models.BooleanField(default=False)),
                ("settings_teams_edit", models.BooleanField(default=False)),
                ("settings_teams_delete", models.BooleanField(default=False)),
                ("settings_teams_update", models.BooleanField(default=False)),
                ("settings_integrations_view", models.BooleanField(default=False)),
                ("settings_integrations_edit", models.BooleanField(default=False)),
                ("settings_integrations_delete", models.BooleanField(default=False)),
                ("settings_integrations_update", models.BooleanField(default=False)),
                ("settings_view", models.BooleanField(default=False)),
                ("settings_edit", models.BooleanField(default=False)),
                ("settings_delete", models.BooleanField(default=False)),
                ("settings_update", models.BooleanField(default=False)),
                (
                    "settings_integrations_notification_view",
                    models.BooleanField(default=False),
                ),
                (
                    "settings_integrations_notification_edit",
                    models.BooleanField(default=False),
                ),
                (
                    "settings_integrations_notification_delete",
                    models.BooleanField(default=False),
                ),
                (
                    "settings_integrations_notification_update",
                    models.BooleanField(default=False),
                ),
                (
                    "settings_integrations_general_view",
                    models.BooleanField(default=False),
                ),
                (
                    "settings_integrations_general_edit",
                    models.BooleanField(default=False),
                ),
                (
                    "settings_integrations_general_delete",
                    models.BooleanField(default=False),
                ),
                (
                    "settings_integrations_general_update",
                    models.BooleanField(default=False),
                ),
                (
                    "settings_integrations_supplier_view",
                    models.BooleanField(default=False),
                ),
                (
                    "settings_integrations_supplier_edit",
                    models.BooleanField(default=False),
                ),
                (
                    "settings_integrations_supplier_delete",
                    models.BooleanField(default=False),
                ),
                (
                    "settings_integrations_supplier_update",
                    models.BooleanField(default=False),
                ),
                (
                    "settings_integrations_template_view",
                    models.BooleanField(default=False),
                ),
                (
                    "settings_integrations_template_edit",
                    models.BooleanField(default=False),
                ),
                (
                    "settings_integrations_template_delete",
                    models.BooleanField(default=False),
                ),
                (
                    "settings_integrations_template_update",
                    models.BooleanField(default=False),
                ),
            ],
            options={"db_table": "lookup_permission",},
        ),
        migrations.CreateModel(
            name="LookupTemplate",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                        unique=True,
                    ),
                ),
                ("is_deleted", models.BooleanField(default=False, null=True)),
                ("deleted_at", models.DateTimeField(blank=True, null=True)),
                ("created_at", models.BigIntegerField(editable=False, null=True)),
                ("modified_at", models.BigIntegerField(editable=False, null=True)),
                ("name", models.CharField(max_length=2000)),
                ("is_default", models.BooleanField()),
            ],
            options={"abstract": False,},
        ),
        migrations.CreateModel(
            name="Permission",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                        unique=True,
                    ),
                ),
                ("is_deleted", models.BooleanField(default=False, null=True)),
                ("deleted_at", models.DateTimeField(blank=True, null=True)),
                ("created_at", models.BigIntegerField(editable=False, null=True)),
                ("modified_at", models.BigIntegerField(editable=False, null=True)),
                ("name", models.CharField(max_length=200)),
                ("settings_teams_view", models.BooleanField(default=False)),
                ("settings_teams_edit", models.BooleanField(default=False)),
                ("settings_teams_delete", models.BooleanField(default=False)),
                ("settings_teams_update", models.BooleanField(default=False)),
                ("settings_integrations_view", models.BooleanField(default=False)),
                ("settings_integrations_edit", models.BooleanField(default=False)),
                ("settings_integrations_delete", models.BooleanField(default=False)),
                ("settings_integrations_update", models.BooleanField(default=False)),
                ("settings_view", models.BooleanField(default=False)),
                ("settings_edit", models.BooleanField(default=False)),
                ("settings_delete", models.BooleanField(default=False)),
                ("settings_update", models.BooleanField(default=False)),
                (
                    "settings_integrations_notification_view",
                    models.BooleanField(default=False),
                ),
                (
                    "settings_integrations_notification_edit",
                    models.BooleanField(default=False),
                ),
                (
                    "settings_integrations_notification_delete",
                    models.BooleanField(default=False),
                ),
                (
                    "settings_integrations_notification_update",
                    models.BooleanField(default=False),
                ),
                (
                    "settings_integrations_general_view",
                    models.BooleanField(default=False),
                ),
                (
                    "settings_integrations_general_edit",
                    models.BooleanField(default=False),
                ),
                (
                    "settings_integrations_general_delete",
                    models.BooleanField(default=False),
                ),
                (
                    "settings_integrations_general_update",
                    models.BooleanField(default=False),
                ),
                (
                    "settings_integrations_supplier_view",
                    models.BooleanField(default=False),
                ),
                (
                    "settings_integrations_supplier_edit",
                    models.BooleanField(default=False),
                ),
                (
                    "settings_integrations_supplier_delete",
                    models.BooleanField(default=False),
                ),
                (
                    "settings_integrations_supplier_update",
                    models.BooleanField(default=False),
                ),
                (
                    "settings_integrations_template_view",
                    models.BooleanField(default=False),
                ),
                (
                    "settings_integrations_template_edit",
                    models.BooleanField(default=False),
                ),
                (
                    "settings_integrations_template_delete",
                    models.BooleanField(default=False),
                ),
                (
                    "settings_integrations_template_update",
                    models.BooleanField(default=False),
                ),
            ],
            options={"abstract": False,},
        ),
        migrations.CreateModel(
            name="LookupRoles",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                        unique=True,
                    ),
                ),
                ("is_deleted", models.BooleanField(default=False, null=True)),
                ("deleted_at", models.DateTimeField(blank=True, null=True)),
                ("created_at", models.BigIntegerField(editable=False, null=True)),
                ("modified_at", models.BigIntegerField(editable=False, null=True)),
                (
                    "name",
                    models.CharField(
                        choices=[
                            ("super_admin", "super_admin"),
                            ("admin", "admin"),
                            ("operations", "operations"),
                            ("finance", "finance"),
                            ("sales", "sales"),
                            ("agency_owner", "agency_owner"),
                            ("agency_staff", "agency_staff"),
                            ("distributor_owner", "distributor_owner"),
                            ("distributor_staff", "distributor_staff"),
                            ("distributor_agent", "distributor_agent"),
                            ("out_api", "out_api"),
                            ("enterprise_owner", "enterprise_owner"),
                        ],
                        max_length=500,
                    ),
                ),
                ("level", models.IntegerField(null=True)),
                (
                    "lookup_organization_type",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="users.lookuporganizationtypes",
                    ),
                ),
                (
                    "lookup_permission",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="users.lookuppermission",
                    ),
                ),
            ],
            options={"db_table": "lookup_roles",},
        ),
        migrations.CreateModel(
            name="LookupTheme",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                        unique=True,
                    ),
                ),
                ("is_deleted", models.BooleanField(default=False, null=True)),
                ("deleted_at", models.DateTimeField(blank=True, null=True)),
                ("created_at", models.BigIntegerField(editable=False, null=True)),
                ("modified_at", models.BigIntegerField(editable=False, null=True)),
                ("primary_color", models.CharField(max_length=2000, null=True)),
                ("secondary_color", models.CharField(max_length=2000, null=True)),
                ("tertiary_color", models.CharField(max_length=2000, null=True)),
                ("success_color", models.CharField(max_length=2000, null=True)),
                ("failure_color", models.CharField(max_length=2000, null=True)),
                ("sidebar_color", models.CharField(max_length=2000, null=True)),
                ("topbar_color", models.CharField(max_length=2000, null=True)),
                ("background_color", models.CharField(max_length=2000, null=True)),
                ("logo", models.CharField(max_length=2000, null=True)),
                ("loader", models.IntegerField(null=True)),
                (
                    "template",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="users.lookuptemplate",
                    ),
                ),
            ],
            options={"abstract": False,},
        ),
        migrations.CreateModel(
            name="NotificationIntegeration",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                        unique=True,
                    ),
                ),
                ("is_deleted", models.BooleanField(default=False, null=True)),
                ("deleted_at", models.DateTimeField(blank=True, null=True)),
                ("created_at", models.BigIntegerField(editable=False, null=True)),
                ("modified_at", models.BigIntegerField(editable=False, null=True)),
                ("name", models.CharField(max_length=200)),
                ("data", models.JSONField()),
                ("icon_url", models.CharField(max_length=600)),
                (
                    "integeration_type",
                    models.CharField(
                        choices=[
                            ("email", "email"),
                            ("sms", "sms"),
                            ("whatsapp", "whatsapp"),
                        ],
                        max_length=200,
                    ),
                ),
                ("is_active", models.BooleanField(default=True)),
                (
                    "country",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE, to="users.country"
                    ),
                ),
                (
                    "look_up",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="users.lookupintegerationnotification",
                    ),
                ),
            ],
            options={"abstract": False,},
        ),
        migrations.CreateModel(
            name="Organization",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                        unique=True,
                    ),
                ),
                ("is_deleted", models.BooleanField(default=False, null=True)),
                ("deleted_at", models.DateTimeField(blank=True, null=True)),
                ("created_at", models.BigIntegerField(editable=False, null=True)),
                ("modified_at", models.BigIntegerField(editable=False, null=True)),
                ("organization_name", models.CharField(max_length=2000)),
                ("company_address", models.TextField()),
                ("organization_state", models.CharField(max_length=2000)),
                ("organization_zipcode", models.IntegerField()),
                (
                    "organization_pan_number",
                    models.CharField(blank=True, max_length=2000, null=True),
                ),
                (
                    "organization_gst_number",
                    models.CharField(blank=True, max_length=2000, null=True),
                ),
                (
                    "organization_tax_number",
                    models.CharField(blank=True, max_length=2000, null=True),
                ),
                ("organization_currency", models.CharField(max_length=200)),
                (
                    "organization_country",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        to="users.country",
                    ),
                ),
                (
                    "organization_type",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="users.lookuporganizationtypes",
                    ),
                ),
            ],
            options={"db_table": "organization",},
        ),
        migrations.CreateModel(
            name="UserDetails",
            fields=[
                ("password", models.CharField(max_length=128, verbose_name="password")),
                (
                    "last_login",
                    models.DateTimeField(
                        blank=True, null=True, verbose_name="last login"
                    ),
                ),
                (
                    "is_superuser",
                    models.BooleanField(
                        default=False,
                        help_text="Designates that this user has all permissions without explicitly assigning them.",
                        verbose_name="superuser status",
                    ),
                ),
                (
                    "username",
                    models.CharField(
                        error_messages={
                            "unique": "A user with that username already exists."
                        },
                        help_text="Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.",
                        max_length=150,
                        null=True,
                        unique=True,
                        validators=[
                            django.contrib.auth.validators.UnicodeUsernameValidator()
                        ],
                        verbose_name="username",
                    ),
                ),
                (
                    "first_name",
                    models.CharField(
                        blank=True, max_length=150, verbose_name="first name"
                    ),
                ),
                (
                    "last_name",
                    models.CharField(
                        blank=True, max_length=150, verbose_name="last name"
                    ),
                ),
                (
                    "email",
                    models.EmailField(
                        blank=True, max_length=254, verbose_name="email address"
                    ),
                ),
                (
                    "is_staff",
                    models.BooleanField(
                        default=False,
                        help_text="Designates whether the user can log into this admin site.",
                        verbose_name="staff status",
                    ),
                ),
                (
                    "date_joined",
                    models.DateTimeField(
                        default=django.utils.timezone.now, verbose_name="date joined"
                    ),
                ),
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                        unique=True,
                    ),
                ),
                ("is_deleted", models.BooleanField(default=False, null=True)),
                ("deleted_at", models.DateTimeField(blank=True, null=True)),
                ("created_at", models.BigIntegerField(editable=False, null=True)),
                ("modified_at", models.BigIntegerField(editable=False, null=True)),
                ("phone_code", models.CharField(blank=True, max_length=100, null=True)),
                (
                    "phone_number",
                    models.CharField(blank=True, max_length=100, null=True),
                ),
                ("is_email_verified", models.BooleanField(default=False)),
                ("is_phone_verified", models.BooleanField(default=False)),
                ("address", models.TextField(blank=True, null=True)),
                ("is_active", models.BooleanField(default=True)),
                ("is_first_time", models.BooleanField(default=True)),
                ("state", models.CharField(blank=True, max_length=300, null=True)),
                ("zip_code", models.CharField(blank=True, max_length=100, null=True)),
                (
                    "agency_name",
                    models.CharField(blank=True, max_length=500, null=True),
                ),
                (
                    "created_by",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "groups",
                    models.ManyToManyField(
                        blank=True,
                        help_text="The groups this user belongs to. A user will get all permissions granted to each of their groups.",
                        related_name="user_set",
                        related_query_name="user",
                        to="auth.group",
                        verbose_name="groups",
                    ),
                ),
                (
                    "user_permissions",
                    models.ManyToManyField(
                        blank=True,
                        help_text="Specific permissions for this user.",
                        related_name="user_set",
                        related_query_name="user",
                        to="auth.permission",
                        verbose_name="user permissions",
                    ),
                ),
                (
                    "base_country",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        to="users.country",
                    ),
                ),
                (
                    "role",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        to="users.lookuproles",
                    ),
                ),
                (
                    "organization",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        to="users.organization",
                    ),
                ),
            ],
            options={"db_table": "user_details",},
            managers=[("objects", django.contrib.auth.models.UserManager()),],
        ),
        migrations.CreateModel(
            name="OtpDetails",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                        unique=True,
                    ),
                ),
                ("is_deleted", models.BooleanField(default=False, null=True)),
                ("deleted_at", models.DateTimeField(blank=True, null=True)),
                ("created_at", models.BigIntegerField(editable=False, null=True)),
                ("modified_at", models.BigIntegerField(editable=False, null=True)),
                ("code", models.CharField(max_length=200)),
                ("expiration_time", models.DateTimeField()),
                ("error_count", models.IntegerField()),
                (
                    "user",
                    models.OneToOneField(
                        blank=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={"db_table": "otp_details",},
        ),
        migrations.CreateModel(
            name="Tickets",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                        unique=True,
                    ),
                ),
                ("is_deleted", models.BooleanField(default=False, null=True)),
                ("deleted_at", models.DateTimeField(blank=True, null=True)),
                ("created_at", models.BigIntegerField(editable=False, null=True)),
                ("modified_at", models.BigIntegerField(editable=False, null=True)),
                (
                    "ticket_type",
                    models.CharField(
                        choices=[("Register", "Register")], max_length=200
                    ),
                ),
                (
                    "status",
                    models.CharField(
                        choices=[("Open", "Open"), ("Close", "Close")], max_length=400
                    ),
                ),
                ("data", models.JSONField(null=True)),
                (
                    "modified_by",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="modified_by",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "user",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="user_details",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={"abstract": False,},
        ),
        migrations.CreateModel(
            name="UserGroup",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                        unique=True,
                    ),
                ),
                ("is_deleted", models.BooleanField(default=False, null=True)),
                ("deleted_at", models.DateTimeField(blank=True, null=True)),
                ("created_at", models.BigIntegerField(editable=False, null=True)),
                ("modified_at", models.BigIntegerField(editable=False, null=True)),
                ("name", models.CharField(max_length=2000)),
                ("is_visible", models.BooleanField(default=False)),
                (
                    "organization",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="users.organization",
                    ),
                ),
                (
                    "permission",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="users.permission",
                    ),
                ),
            ],
            options={"db_table": "user_group",},
        ),
        migrations.AddField(
            model_name="userdetails",
            name="user_group",
            field=models.ForeignKey(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.CASCADE,
                to="users.usergroup",
            ),
        ),
    ]
